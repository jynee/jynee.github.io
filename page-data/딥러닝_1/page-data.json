{"componentChunkName":"component---src-templates-post-tsx","path":"/딥러닝_1/","result":{"data":{"markdownRemark":{"html":"<h1 id=\"딥러닝-dl\" style=\"position:relative;\"><a href=\"#%EB%94%A5%EB%9F%AC%EB%8B%9D-dl\" aria-label=\"딥러닝 dl permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>딥러닝 DL</h1>\n<ul>\n<li>optimaizer</li>\n<li>kerass</li>\n</ul>\n<br>\n<br>\n<h2 id=\"optimizers\" style=\"position:relative;\"><a href=\"#optimizers\" aria-label=\"optimizers permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>optimizers</h2>\n<ul>\n<li>\n<p>이차방정식 계수 추정 방법들:</p>\n<ol>\n<li><code class=\"language-text\">SGD</code>: 움직임</li>\n<li><code class=\"language-text\">GD</code> : 미분해서 움직임</li>\n<li><code class=\"language-text\">momentum</code>: 지수이동평균법으로 움직임</li>\n<li><code class=\"language-text\">NAG</code>: 관성 방향으로 이동 후 그 지점에서 GD 방향으로 움직임 </li>\n</ol>\n</li>\n</ul>\n <br>\n<ul>\n<li>\n<p>가중치(알파 or lr) 조정 알고리즘</p>\n<ol>\n<li><code class=\"language-text\">Adagrad</code>: 업데이트 多~작은 알파 / 업데이트 小~큰 알파</li>\n<li><code class=\"language-text\">RMSprop</code>: Adagrad에서 반복할수록 과도하게 작아진다는 알파값 보완 </li>\n<li><code class=\"language-text\">Adadelta</code>: RMSprop와 같은데 알파값이 자동조절됨</li>\n<li><code class=\"language-text\">Adam</code>: RMSprop + momentum</li>\n</ol>\n</li>\n</ul>\n <br>\n<br>\n<h2 id=\"keras\" style=\"position:relative;\"><a href=\"#keras\" aria-label=\"keras permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keras</h2>\n<ul>\n<li>\n<p>Sequential 모델: </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">From tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layes <span class=\"token keyword\">import</span> Dense\nFrom tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Sequential\nModel <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#그래프 생성(모델 생성)</span>\nModel<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> input_dim <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#layer(dense), 노드 1개, 그 노드에 2개가 들어온다고 알려줌</span>\nModel<span class=\"token punctuation\">.</span>complile<span class=\"token punctuation\">(</span>loss<span class=\"token operator\">=</span>’mse’<span class=\"token punctuation\">,</span> optimizer<span class=\"token operator\">=</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>lr<span class=\"token operator\">=</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nModel<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>dataX<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> epochs <span class=\"token operator\">=</span> <span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#학습</span></code></pre></div>\n<br>\n</li>\n<li>\n<p>더 간단한 모델: </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">From tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layes <span class=\"token keyword\">import</span> Input<span class=\"token punctuation\">,</span> Dense\nFrom tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Model\nxInput <span class=\"token operator\">=</span> Input<span class=\"token punctuation\">(</span>batch_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#그래프 생성(모델 생성)</span>\nyInput <span class=\"token operator\">=</span> Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>xInput<span class=\"token punctuation\">)</span>\nmodel <span class=\"token operator\">=</span> Model<span class=\"token punctuation\">(</span>xInput<span class=\"token punctuation\">,</span> yOutput<span class=\"token punctuation\">)</span> <span class=\"token comment\">#xinput 들어가서 yinput나오는 model</span>\nmodel<span class=\"token punctuation\">.</span>complie<span class=\"token punctuation\">(</span>loss<span class=\"token operator\">=</span>’mse’<span class=\"token punctuation\">,</span> optimizer<span class=\"token operator\">=</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span>lr<span class=\"token operator\">=</span><span class=\"token number\">0.05</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nmodel<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>dataX<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>epochs<span class=\"token operator\">=</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#학습</span></code></pre></div>\n</li>\n</ul>\n <br>\n<ul>\n<li>\n<p>잔차 계산 방법들:</p>\n<ol>\n<li>Stochastic GD update: 그때그때 error 계산, a, b, c 업데이트</li>\n<li>Batch update: 한꺼번에 error 계산하고 a, b , c 업뎃</li>\n<li>Mini-batch update: 일부 error 계산하고 그때마다 a, b, c 를 업데이트. Stochastic GD update, Batch update의 중간 특성</li>\n</ol>\n<br>\n</li>\n<li>\n<p>Model 의 기본적인 code:</p>\n<ul>\n<li><code class=\"language-text\">.fit</code> : train data를 만들어둔 model로 학습시킴</li>\n<li><code class=\"language-text\">.predict</code>: test data를 만들어둔 model로 궁예해봄</li>\n</ul>\n</li>\n</ul>\n <br>\n <br>\n<br>\n<br>","excerpt":"딥러닝 DL optimaizer kerass optimizers 이차방정식 계수 추정 방법들: : 움직임  : 미분해서 움직임 : 지수이동평균법으로 움직임 : 관성 방향으로 이동 후 그 지점에서 GD 방향으로 움직임  가중치(알파 or lr…","tableOfContents":"<ul>\n<li>\n<p><a href=\"/%EB%94%A5%EB%9F%AC%EB%8B%9D_1/#%EB%94%A5%EB%9F%AC%EB%8B%9D-dl\">딥러닝 DL</a></p>\n<ul>\n<li><a href=\"/%EB%94%A5%EB%9F%AC%EB%8B%9D_1/#optimizers\">optimizers</a></li>\n<li><a href=\"/%EB%94%A5%EB%9F%AC%EB%8B%9D_1/#keras\">Keras</a></li>\n</ul>\n</li>\n</ul>","fields":{"slug":"/딥러닝_1/"},"frontmatter":{"title":"딥러닝 기초","date":"Jul 03, 2020","tags":["DL"],"keywords":["JyneeEarth","jynee"],"update":"Aug 16, 2020"}}},"pageContext":{"slug":"/딥러닝_1/","series":[{"slug":"/딥러닝_1/","title":"딥러닝 기초","num":1},{"slug":"/딥러닝_2/","title":"딥러닝 LSTM&CNN","num":2}],"lastmod":"2020-08-16"}},"staticQueryHashes":["3649515864","694178885"]}
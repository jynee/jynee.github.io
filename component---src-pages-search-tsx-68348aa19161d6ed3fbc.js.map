{"version":3,"sources":["webpack:///(webpack)/buildin/module.js","webpack:///./src/pages/search.tsx","webpack:///./src/components/PostList/index.tsx"],"names":["module","exports","webpackPolyfill","deprecate","paths","children","Object","defineProperty","enumerable","get","l","i","pageQuery","Search","props","posts","data","allMarkdownRemark","edges","useState","value","setValue","isTitleOnly","setIsTitleOnly","filteredPosts","filter","post","node","frontmatter","rawMarkdownBody","title","lowerValue","toLocaleLowerCase","includes","id","className","icon","faSearch","type","name","placeholder","autoComplete","autoFocus","onChange","e","currentTarget","style","opacity","onClick","length","PostList","memo","showCnt","setShowCnt","throttleScrollHandler","useCallback","throttle","window","outerHeight","document","querySelector","getBoundingClientRect","bottom","prev","useEffect","addEventListener","removeEventListener","sort","a","b","af","bf","aDate","Date","update","date","bDate","mapPost","map","excerpt","fields","slug","tags","Number","split","mapTag","tag","key","to"],"mappings":"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","file":"component---src-pages-search-tsx-68348aa19161d6ed3fbc.js","sourcesContent":["module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","import * as React from 'react';\r\nimport { useState } from 'react';\r\nimport { FontAwesomeIcon as Fa } from '@fortawesome/react-fontawesome';\r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport Layout from '../components/Layout';\r\nimport SEO from '../components/seo';\r\nimport { graphql } from 'gatsby';\r\nimport PostList from '../components/PostList';\r\nimport './styles/search.scss';\r\n\r\nexport interface SearchProps {\r\n  data: any;\r\n}\r\n\r\nconst Search = (props: SearchProps) => {\r\n  const { data } = props;\r\n  const posts = data.allMarkdownRemark.edges;\r\n\r\n  const [value, setValue] = useState('');\r\n  const [isTitleOnly, setIsTitleOnly] = useState(true);\r\n\r\n  const filteredPosts: any[] = posts.filter((post: any) => {\r\n    const { node } = post;\r\n    const { frontmatter, rawMarkdownBody } = node;\r\n    const { title } = frontmatter;\r\n    const lowerValue = value.toLocaleLowerCase();\r\n\r\n    if (!isTitleOnly && rawMarkdownBody.toLocaleLowerCase().includes(lowerValue)) return true;\r\n\r\n    return title.toLocaleLowerCase().includes(lowerValue);\r\n  });\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Search\" />\r\n      <div id=\"Search\">\r\n        <div className=\"search-inner-wrap\">\r\n          <div className=\"input-wrap\">\r\n            <Fa icon={faSearch} />\r\n            <input\r\n              type=\"text\"\r\n              name=\"search\"\r\n              id=\"searchInput\"\r\n              value={value}\r\n              placeholder=\"Search\"\r\n              autoComplete=\"off\"\r\n              autoFocus\r\n              onChange={(e: React.FormEvent<HTMLInputElement>) => {\r\n                setValue(e.currentTarget.value);\r\n              }}\r\n            />\r\n            <div className=\"search-toggle\">\r\n              <span\r\n                style={{ opacity: isTitleOnly ? 0.8 : 0.15 }}\r\n                onClick={() => {\r\n                  setIsTitleOnly(true);\r\n                }}\r\n              >\r\n                in Title\r\n              </span>\r\n              <span\r\n                style={{ opacity: !isTitleOnly ? 0.8 : 0.15 }}\r\n                onClick={() => {\r\n                  setIsTitleOnly(false);\r\n                }}\r\n              >\r\n                in Title+Content\r\n              </span>\r\n            </div>\r\n          </div>\r\n\r\n          {value !== '' && !filteredPosts.length ? <span className=\"no-result\">No search results</span> : null}\r\n          <PostList posts={value === '' ? posts : filteredPosts} />\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n          rawMarkdownBody\r\n          excerpt(format: PLAIN)\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMM DD, YYYY\")\r\n            title\r\n            tags\r\n            update(formatString: \"MMM DD, YYYY\")\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default Search;\r\n","import * as React from 'react';\r\nimport { memo, useEffect, useState, useCallback } from 'react';\r\nimport { Link } from 'gatsby';\r\nimport { throttle } from 'lodash';\r\n\r\nimport './postList.scss';\r\n\r\nexport interface PostListProps {\r\n  posts: any[];\r\n}\r\n\r\nconst PostList = memo((props: PostListProps) => {\r\n  const { posts } = props;\r\n  const [showCnt, setShowCnt] = useState(10);\r\n\r\n  const throttleScrollHandler = useCallback(\r\n    throttle(() => {\r\n      if (\r\n        window.outerHeight > (document.querySelector('.post-list') as HTMLDivElement).getBoundingClientRect().bottom\r\n      ) {\r\n        setShowCnt((prev: number) => {\r\n          if (prev >= posts.length) return prev;\r\n          return prev + 10;\r\n        });\r\n      }\r\n    }, 250),\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', throttleScrollHandler);\r\n\r\n    return () => {\r\n      window.removeEventListener('scroll', throttleScrollHandler);\r\n    };\r\n  }, []);\r\n\r\n  posts.sort((a: any, b: any) => {\r\n    const af = a.node.frontmatter;\r\n    const bf = b.node.frontmatter;\r\n\r\n    const aDate = new Date(af.update.includes('0001') ? af.date : af.update);\r\n    const bDate = new Date(bf.update.includes('0001') ? bf.date : bf.update);\r\n\r\n    if (aDate < bDate) return 1;\r\n    if (aDate > bDate) return -1;\r\n    return 0;\r\n  });\r\n\r\n  const mapPost = posts.map((post: any, i: number) => {\r\n    const { node } = post;\r\n    const { excerpt, fields, frontmatter } = node;\r\n    const { slug } = fields;\r\n    const { date, title, tags } = frontmatter;\r\n    let update = frontmatter.update;\r\n    if (Number(update.split(',')[1]) === 1) update = null;\r\n\r\n    const mapTag = tags.map((tag: string) => {\r\n      if (tag === 'undefined') return;\r\n\r\n      return (\r\n        <div key={`${slug}-${tag}`} className=\"tag\">\r\n          <span>\r\n            <Link to={`/tags#${tag}`}>{`#${tag}`}</Link>\r\n          </span>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return (\r\n      <li key={slug} className={`post ${i < showCnt ? 'show' : 'hide'}`}>\r\n        <article>\r\n          <h2 className=\"title\">\r\n            <Link to={slug}>{title}</Link>\r\n          </h2>\r\n          <div className=\"info\">\r\n            <div className=\"date-wrap\">\r\n              <span className=\"date\">{date}</span>\r\n              {update ? <span className=\"update\">&nbsp;{`(Updated: ${update})`}</span> : null}\r\n            </div>\r\n            {tags.length && tags[0] !== 'undefined' ? <span className=\"info-dot\">·</span> : null}\r\n            <ul className=\"tag-list\">{mapTag}</ul>\r\n          </div>\r\n          <span className=\"excerpt\">\r\n            <Link to={slug}>{excerpt}</Link>\r\n          </span>\r\n        </article>\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div className=\"post-list\">\r\n      <ul>{mapPost}</ul>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default PostList;\r\n"],"sourceRoot":""}